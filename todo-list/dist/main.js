(()=>{var t={416:function(t,e){t.exports=function(){"use strict";function o(t){this.message=t,this.name="CreateElementException"}return t.exports=e.default,function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"div",e=t.match(/^[a-z]+/i),r=t.match(/#([a-z]+[a-z0-9-]*)/gi),i=t.match(/\.([a-z]+[a-z0-9-]*)/gi),d=t.match(/\[([a-z][a-z-]+)(=['|"]?([^\]]*)['|"]?)?\]/gi),n=e?e[0]:"div";if(r&&r.length>1)throw o("only 1 ID is allowed");var c=document.createElement(n);if(r&&(c.id=r[0].replace("#","")),i){var s=i.join(" ").replace(/\./g,"");c.setAttribute("class",s)}d&&d.forEach((function(t){var e=(t=t.slice(0,-1).slice(1)).split("="),o=e[0],r=e[1];r&&(r=r.replace(/^['"](.*)['"]$/,"$1")),c.setAttribute(o,r||"")}));for(var a=arguments.length,l=Array(a>1?a-1:0),h=1;h<a;h++)l[h-1]=arguments[h];return l.forEach((function(t){"string"==typeof t||"number"==typeof t?c.appendChild(document.createTextNode(t)):t.nodeType===document.ELEMENT_NODE&&c.appendChild(t)})),c}}()}},e={};function o(r){var i=e[r];if(void 0!==i)return i.exports;var d=e[r]={exports:{}};return t[r].call(d.exports,d,d.exports,o),d.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var r in e)o.o(e,r)&&!o.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";const t=(()=>{const t=t=>document.querySelector(t);return{project:{add:t(".add-project"),form:{action:{submit:t("#project-container .add-button"),cancel:t("#project-container .cancel-button")},value:{title:t("#project-container .input-title")},self:t("#add-project-popup")}},todo:{add:t(".add-todo"),form:{action:{submit:t("#todo-container .add-button"),cancel:t("#todo-container .cancel-button")},value:{title:t("#todo-container .input-title"),checked:t("#todo-container .input-checked"),priority:t("#todo-container .input-priority"),dueDate:t("#todo-container .input-date")},self:t("#add-todo-popup")}}}})();var e=o(416),r=o.n(e);new class{constructor(t,e,o){this.model=t,this.view=e,this.UI=o,this.lastId=0,this.currentProject="today",this.setAddButtonEvents(),this.setFormEvents(),this.createInitialState()}setFormEvents(){this.UI.project.form.self.addEventListener("submit",(t=>{t.preventDefault(),this.handleProjectSubmit()})),this.UI.project.form.action.cancel.addEventListener("click",(()=>this.#t(this.UI.project.form.self))),this.UI.todo.form.self.addEventListener("submit",(t=>{t.preventDefault(),this.handleTodoSubmit()})),this.UI.todo.form.action.cancel.addEventListener("click",(()=>this.#t(this.UI.todo.form.self)))}setAddButtonEvents(){this.UI.project.add.addEventListener("click",(()=>{this.#e(this.UI.project.form.self)})),this.UI.todo.add.addEventListener("click",(()=>{this.#e(this.UI.todo.form.self)}))}#t(t){t.style.display="none"}#e(t){t.style.display="flex"}handleProjectSubmit=()=>{const t=this.#o();this.newProject(t)};handleTodoSubmit=()=>{const t=this.#r();this.newTodo(t)};#r(){const t={};for(const[e,o]of Object.entries(this.UI.todo.form.value))t[e]="checked"===e?o.checked:o.value;return t}#o(){return{title:this.UI.project.form.value.title.value}}createInitialState=()=>{const t=new Date;this.newProject({title:this.currentProject}),this.newTodo({checked:!1,priority:"high",title:"Do todo-list site!",dueDate:`${t.getFullYear()}/${t.getMonth()}/${t.getDate()}`}),document.querySelector(".project-item").classList.add("active"),[(this.UI.todo.form.self,this.UI.project.form.self)].forEach((t=>this.#t(t))),this.createInitialState=()=>{}};newProject(t){this.model.createNewProject(t.title),this.view.createProjectElement(t).addEventListener("click",(e=>{this.view.resetTodoContainer();const o=this.model.getTodoList(e.target.innerText);this.deActivateAllProjects(),e.target.classList.toggle("active"),this.view.createTodoElements(o,t.title),this.currentProject=t.title})),this.#t(this.UI.project.form.self)}newTodo(t){const e=this.currentProject;this.model.createNewTodo(t,this.currentProject);const o=this.lastId,r=this.view.createTodoElement(Object.assign(t,{id:o}),e);r.querySelector(".delete-button").addEventListener("click",(()=>{this.model.removeTodo(o,e),this.view.removeTodoItem(o)})),r.querySelector(".edit-button").addEventListener("click",(()=>{this.model.editTodo(o,e,editedObject),this.view.editTodoItem(o,editedObject)})),this.lastId+=1,this.#t(this.UI.todo.form.self)}deActivateAllProjects=()=>{Array.from(document.querySelectorAll(".project-item")).forEach((t=>{t.classList.remove("active")}))}}(new class{constructor(){this.projectArray={[this.defaultProject]:[]}}getTodoList(t){return this.#i(t),this.projectArray[t]}createNewProject(t){if(void 0!==this.projectArray[t])throw new Error(`There is already project named ${t}`);this.projectArray[t]=[]}createNewTodo(t,e){this.#i(e),this.projectArray[e].push(t)}#i(t){if(void 0===this.projectArray[t])throw Error(`There is no project named ${t}`)}#d(t,e){if(this.projectArray[e].every((e=>e.id!==t)))throw Error(`There is no todo that has id:${t} in ${e}`)}removeTodo(t,e){this.#i(e),this.#d(t,e),this.projectArray[e].filter((e=>e.id===t))}editTodo(t,e,o){this.#i(e),this.#d(t,e),this.projectArray[e]=this.projectArray[e].map((e=>e.id===t?o:e))}},new class extends class{constructor(t,e){this.projectContainer=t,this.todoContainer=e}createProjectElement=({title:t},e=!0)=>{const o=document.createElement("div");return o.classList.add("project-item"),o.innerText=t,e&&this.projectContainer.appendChild(o),o};createTodoElement=({checked:t,priority:e,title:o,dueDate:i,id:d},n,c=!0)=>{const s=document.createElement("div");s.classList.add("todo-item"),s.setAttribute("data-id",d),s.setAttribute("data-project",n),s.appendChild(r()(`div.priority.${e}`)),s.appendChild(r()(`div.${t} .checked`)),s.appendChild(r()(".title",o)),s.appendChild(r()(".dueDate",i));const a=r()("div.delete-button");a.innerText="−";const l=r()("div.edit-button");return l.innerText="✐",s.appendChild(a),s.appendChild(l),c&&this.todoContainer.appendChild(s),s};createTodoElements=(t,e)=>{t.forEach((t=>this.createTodoElement(t,e)))}}{constructor(){super(document.getElementById("project-list"),document.getElementById("todo-list")),this.projectContainer=document.getElementById("project-list"),this.todoContainer=document.getElementById("todo-list")}resetTodoContainer(){this.todoContainer.innerHTML=""}removeTodoItem(t){document.querySelector(`.todo-item[data-id="${t}"`).remove()}editTodoItem(t,e){document.querySelector(`.todo-item[data-id="${t}"`).replaceWith(this.createTodoElement(e,!0))}},t).createInitialState()})()})();